{"version":3,"file":"readonly.pipe.js","sourceRoot":"","sources":["../../.tmp/pipe/readonly.pipe.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,IAAI,EAAE,aAAa,EAAE,sBAAsB;AACpD,OAAO,EAAE,QAAQ,EAAE,2BAA2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAiCnC,gCAAS;;;;;cAAC,KAAU,EAAE,IAAgB;QAAhB,qBAAA,EAAA,SAAgB;QACzC,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC,IAAI,CAAC;SACf;QAED,EAAE,CAAC,CAAC,KAAK,YAAY,GAAG,CAAC,CAAC,CAAC;YACvB,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;SACtC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;YAC3D,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;SACxC;QAED,MAAM,CAAC,KAAK,CAAC;;;;;;IAGT,sCAAe;;;;cAAC,KAAoB;;QACxC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QAEjB,KAAK,CAAC,OAAO,CAAC,UAAC,GAAG,EAAE,GAAG;YACnB,EAAE,CAAC,CAAC,GAAG,YAAY,MAAM,CAAC,CAAC,CAAC;gBACxB,GAAG,GAAG,KAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBAEpC,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;aAEzC;YAAC,IAAI,CAAC,CAAC;gBACJ,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,KAAA,EAAE,GAAG,KAAA,EAAE,CAAC,CAAC;aAClC;SACJ,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;;;;;;;;IAGf,uCAAgB;;;;;;cAAC,OAAY,EAAE,KAAiB,EAAE,IAAgB;;QAAnC,sBAAA,EAAA,SAAiB;QAAE,qBAAA,EAAA,QAAgB;QACtE,qBAAI,MAAM,GAAQ,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACvC,qBAAI,MAAM,GAAQ,EAAE,CAAC;QAErB,MAAM,CAAC,OAAO,CAAC,UAAC,GAAQ;YAEpB,EAAE,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBAE9B,EAAE,CAAC,CAAC,IAAI,IAAI,KAAK,CAAC,CAAC,CAAC;oBAChB,IAAI,EAAE,CAAC;oBACP,MAAM,CAAC,GAAG,CAAC,GAAG,KAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;iBAClE;aAEJ;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;aAC9B;SACJ,CAAC,CAAC;QAEH,MAAM,CAAC,MAAM,CAAC;;;;;;IAGV,+BAAQ;;;;cAAC,GAAQ;QACrB,qBAAI,WAAW,GAAQ,EAAE,CAAC;QAE1B,qBAAI,MAAM,GAAQ,UAAC,CAAM;YACrB,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;gBACxB,EAAE,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;oBAChC,MAAM,CAAC,IAAI,CAAC;iBACf;gBACD,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACpB,GAAG,CAAC,CAAC,qBAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;oBAChB,EAAE,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC1C,MAAM,CAAC,IAAI,CAAC;qBACf;iBACJ;aACJ;YACD,MAAM,CAAC,KAAK,CAAC;SAChB,CAAC;QAEF,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;;;;;;;IAGf,kCAAW;;;;;cAAC,KAAU,EAAE,IAAgB;QAAhB,qBAAA,EAAA,SAAgB;QAC5C,qBAAI,MAAM,GAAQ,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACrC,qBAAI,OAAO,GAAQ,EAAE,CAAC;QACtB,qBAAI,OAAO,GAAQ,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAE7C,MAAM,CAAC,OAAO,CAAC,UAAC,GAAQ;YACpB,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxB,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC;aACtC;YACD,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC;YAC1B,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;SAC5B,CAAC,CAAC;QAEH,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACV,OAAO,CAAC,IAAI,CAAC,UAAC,CAAM,EAAE,CAAM;gBACxB,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aAC3C,CAAC,CAAC;SACN;QAED,MAAM,CAAC,OAAO,CAAC;;;gBApGtB,IAAI,SAAC;oBACF,IAAI,EAAE,UAAU;iBAEnB;;;;uBA7BD;;SA8Ba,YAAY","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isObject } from 'rxjs/util/isObject';\r\n\r\n/**\r\n * Allow ngFor to iterate on object collection\r\n *\r\n * ref = {\r\n *  a1: \"valeur,\r\n *  a2: \"valeur,\r\n *  a3: \"valeur,\r\n *  }\r\n *\r\n *  ou encore\r\n *\r\n * ref = {\r\n *  a1: {foo:'bar', foo1:'bar1'},\r\n *  a2: {foo:'bar', foo1:'bar1'},\r\n *  a3: {foo:'bar', foo1:'bar1'}\r\n *  }\r\n *\r\n * exemple\r\n * <select class=\"form__input\" type=\"text\" ngControl=\"situationZoneClimatique\">\r\n * <option *ngFor=\"let c of references?.climat | readOnly\" value=\"{{ c.key }}\">{{ c.value }}</option>\r\n * </select>\r\n *\r\n */\r\n@Pipe({\r\n    name: 'readOnly',\r\n    // pure: false\r\n})\r\nexport class ReadOnlyPipe implements PipeTransform {\r\n\r\n    private result: any;\r\n\r\n    public transform(value: any, args: any[] = []): any {\r\n        if (value == null) {\r\n            return null;\r\n        }\r\n\r\n        if (value instanceof Map) {\r\n            return this.manageMapObject(value);\r\n        } else if (Array.isArray(value) || typeof value === 'object') {\r\n            return this.manageArray(value, args);\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    private manageMapObject(value: Map<any, any>): Object[] {\r\n        this.result = [];\r\n\r\n        value.forEach((obj, key) => {\r\n            if (obj instanceof Object) {\r\n                obj = this.manageObjectList(obj, 1);\r\n\r\n                this.result = this.result.concat(obj);\r\n\r\n            } else {\r\n                this.result.push({ key, obj });\r\n            }\r\n        });\r\n\r\n        return this.result;\r\n    }\r\n\r\n    private manageObjectList(objList: any, depth: number = 0, into: number = 0) {\r\n        let keyArr: any = Object.keys(objList);\r\n        let arrRes: any = {};\r\n\r\n        keyArr.forEach((key: any) => {\r\n\r\n            if (this.isCyclic(objList[key])) {\r\n\r\n                if (into <= depth) {\r\n                    into++;\r\n                    arrRes[key] = this.manageObjectList(objList[key], depth, into);\r\n                }\r\n\r\n            } else {\r\n                arrRes[key] = objList[key];\r\n            }\r\n        });\r\n\r\n        return arrRes;\r\n    }\r\n\r\n    private isCyclic(obj: any) {\r\n        let seenObjects: any = [];\r\n\r\n        let detect: any = (o: any) => {\r\n            if (typeof o === 'object') {\r\n                if (seenObjects.indexOf(o) !== -1) {\r\n                    return true;\r\n                }\r\n                seenObjects.push(o);\r\n                for (let key in o) {\r\n                    if (o.hasOwnProperty(key) && detect(o[key])) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n\r\n        return detect(obj);\r\n    }\r\n\r\n    private manageArray(value: any, args: any[] = []): any {\r\n        let keyArr: any = Object.keys(value);\r\n        let dataArr: any = [];\r\n        let keyName: any = args[0] ? args[0] : 'key';\r\n\r\n        keyArr.forEach((key: any) => {\r\n            if (!isObject(value[key])) {\r\n                value[key] = { value: value[key] };\r\n            }\r\n            value[key][keyName] = key;\r\n            dataArr.push(value[key]);\r\n        });\r\n\r\n        if (args[1]) {\r\n            dataArr.sort((a: any, b: any): number => {\r\n                return a[keyName] > b[keyName] ? 1 : -1;\r\n            });\r\n        }\r\n\r\n        return dataArr;\r\n    }\r\n}\r\n"]}